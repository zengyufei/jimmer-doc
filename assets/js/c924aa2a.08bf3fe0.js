"use strict";(self.webpackChunkdocusaurus_code=self.webpackChunkdocusaurus_code||[]).push([[5328],{8357:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>c,default:()=>p,frontMatter:()=>o,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"query/usage","title":"Overview","description":"Select-After Style","source":"@site/docs/query/usage.mdx","sourceDirName":"query","slug":"/query/usage","permalink":"/jimmer-doc/docs/query/usage","draft":false,"unlisted":false,"editUrl":"https://github.com/babyfish-ct/jimmer-doc/edit/main/docs/query/usage.mdx","tags":[],"version":"current","lastUpdatedAt":1704100403000,"sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"Overview"},"sidebar":"tutorialSidebar","previous":{"title":"Query","permalink":"/jimmer-doc/docs/query/"},"next":{"title":"Object Fetcher","permalink":"/jimmer-doc/docs/query/object-fetcher/"}}');var i=t(74848),s=t(28453),a=t(11470),l=t(19365);const o={sidebar_position:1,title:"Overview"},c=void 0,u={},d=[{value:"Select-After Style",id:"select-after-style",level:2},{value:"Code Structure",id:"code-structure",level:2}];function h(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"select-after-style",children:"Select-After Style"}),"\n",(0,i.jsxs)(n.p,{children:["Unlike native SQL, in the DSL provided by Jimmer, the ",(0,i.jsx)(n.code,{children:"select"})," statement comes after ",(0,i.jsx)(n.code,{children:"where"}),", ",(0,i.jsx)(n.code,{children:"orderBy"}),", ",(0,i.jsx)(n.code,{children:"groupBy"}),", ",(0,i.jsx)(n.code,{children:"having"}),", etc. For example:"]}),"\n",(0,i.jsxs)(a.A,{groupId:"language",children:[(0,i.jsx)(l.A,{value:"java",label:"Java",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'BookTable table = Tables.BOOK_TABLE;\n\nList<Book> books = sqlClient\n    .createQuery(table) \u2776\n    .where(table.name().eq("SQL in Action"))\n    .orderBy(table.name().asc(), table.edition().desc())\n    // highlight-next-line  \n    .select(table) \u2777\n    .limit(10, 100)\n    .execute(); \u2778\n'})})}),(0,i.jsx)(l.A,{value:"kotlin",label:"Kotlin",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:'val books = sqlClient\n    .createQuery(Book::class) { \u2776\n        where(table.name eq "SQL in Action")\n        orderBy(table.name.asc(), table.edition.desc())\n        // highlight-next-line\n        select(table) \u2777\n    }\n    .limit(10, 100)\n    .execute() \u2778\n'})})})]}),"\n",(0,i.jsxs)(n.admonition,{type:"tip",children:[(0,i.jsxs)(n.p,{children:["Putting ",(0,i.jsx)(n.code,{children:"select"})," after is not invented by Jimmer. This style was first brought to mainstream by ",(0,i.jsx)(n.a,{href:"https://learn.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/linq/",children:"LINQ"})," introduced in C# 3.5."]}),(0,i.jsx)(n.p,{children:"This style has innate advantages for building strongly typed DSL frameworks, so Jimmer naturally adopts it."})]}),"\n",(0,i.jsx)(n.h2,{id:"code-structure",children:"Code Structure"}),"\n",(0,i.jsx)(n.p,{children:"Now let's explain the code:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"\u2776 Create the query, get a mutable query object. Operations targeting this object continue until \u2777."}),"\n",(0,i.jsxs)(n.p,{children:["A mutable query object means any operations like ",(0,i.jsx)(n.code,{children:"where"}),", ",(0,i.jsx)(n.code,{children:"orderBy"}),", ",(0,i.jsx)(n.code,{children:"groupBy"}),", ",(0,i.jsx)(n.code,{children:"having"})," directly modify the current query object."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["\u2777 Call ",(0,i.jsx)(n.code,{children:"select"}),", convert the mutable query object into an immutable one. Operations targeting this object continue until \u2778."]}),"\n",(0,i.jsxs)(n.p,{children:["An immutable query object means any operations like ",(0,i.jsx)(n.code,{children:"distinct"}),", ",(0,i.jsx)(n.code,{children:"limit"}),", ",(0,i.jsx)(n.code,{children:"forUpdate"}),", ",(0,i.jsx)(n.code,{children:"reselect"}),", ",(0,i.jsx)(n.code,{children:"withoutSortingAndPaging"}),", ",(0,i.jsx)(n.code,{children:"union"}),", ",(0,i.jsx)(n.code,{children:"unionAll"}),", ",(0,i.jsx)(n.code,{children:"minus"}),", ",(0,i.jsx)(n.code,{children:"intersect"}),", do not change the current object but create a new one."]}),"\n",(0,i.jsxs)(n.p,{children:["For example ",(0,i.jsx)(n.em,{children:"(to be concise, this pseudo-code uses Kotlin)"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:"val query = sqlClient.createQuery(Book::class) {\n    where(...)\n    orderBy(...)\n    select(...)\n}\nval query1 = query.limit(10, 0); \nval query2 = query.limit(10, 1);\nval query3 = query.limit(10, 2);\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Here ",(0,i.jsx)(n.code,{children:"query"})," is the original query, ",(0,i.jsx)(n.code,{children:"query1"}),", ",(0,i.jsx)(n.code,{children:"query2"}),", ",(0,i.jsx)(n.code,{children:"query3"})," are other queries created based on it. ",(0,i.jsx)(n.code,{children:"limit"})," does not change ",(0,i.jsx)(n.code,{children:"query"})," itself but creates new immutable query objects."]}),"\n",(0,i.jsxs)(n.p,{children:["Finally, ",(0,i.jsx)(n.code,{children:"query1"}),", ",(0,i.jsx)(n.code,{children:"query2"}),", ",(0,i.jsx)(n.code,{children:"query3"})," share the same filters, sorting and structure projection as ",(0,i.jsx)(n.code,{children:"query"}),", only differing in paging range. They can coexist without interfering with each other."]}),"\n",(0,i.jsxs)(n.p,{children:["Also, the mutable query before ",(0,i.jsx)(n.code,{children:"select"})," has no return type, while the immutable query after ",(0,i.jsx)(n.code,{children:"select"})," has a return type. That is, ",(0,i.jsx)(n.code,{children:"select"})," assigns the final return type to the query."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["\u2778 Call ",(0,i.jsx)(n.code,{children:"execute"})," to execute the query and return data."]}),"\n",(0,i.jsx)(n.p,{children:"Before this step, no matter how the DSL is operated and tuned, no SQL operations will be executed."}),"\n",(0,i.jsxs)(n.p,{children:["Besides ",(0,i.jsx)(n.code,{children:"execute"}),", there are other methods to execute queries:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"fetchOne"}),": Assume the query returns exactly one row, get that row. Throw exception if 0 or more rows are returned during actual execution."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"fetchOneOrNull"}),": Assume the query returns 0 or 1 row, get that row or null. Throw exception if more rows are returned during actual execution."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"fetchOptional"}),": Similar to ",(0,i.jsx)(n.code,{children:"fetchOneOrNull"})," but returns ",(0,i.jsx)(n.code,{children:"java.util.Optional<T>"})," instead of ",(0,i.jsx)(n.code,{children:"null | T"}),"."]}),"\n",(0,i.jsx)(n.admonition,{type:"caution",children:(0,i.jsxs)(n.p,{children:["This API only exists in Java API, not in Kotlin API since Kotlin does not need ",(0,i.jsx)(n.code,{children:"java.util.Optional<T>"}),"."]})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"map"}),": Execute directly and do an additional collection map operation at JVM level on top of the returned raw collection."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"forEach"}),": If returning too much data to avoid materializing a large collection, ",(0,i.jsx)(n.code,{children:"forEach"})," can be called with a callback to traverse all data."]}),"\n",(0,i.jsx)(n.p,{children:"This is what people often refer to as cursor queries."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"count"}),": Based on the original data query written by users, automatically generate the count aggregate query needed for paging, execute and get total rows before paging."]}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["This is a smart and advanced operation, please see ",(0,i.jsx)(n.a,{href:"./paging",children:"Paging"}),"."]})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.admonition,{type:"tip",children:[(0,i.jsx)(n.p,{children:"All the methods above to execute queries have two overloaded versions:"}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Parameterless version ",(0,i.jsx)(n.em,{children:"(as shown in the example)"})," utilizes Jimmer's connection management ",(0,i.jsx)(n.em,{children:"(usually integrating with Spring transaction management)"})," to get JDBC connection and execute."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Version with a parameter accepting a JDBC connection. In special cases developers can discard Jimmer's connection management ",(0,i.jsx)(n.em,{children:"(usually integrating with Spring transaction management)"})," and execute on a specified JDBC connection."]}),"\n"]}),"\n"]})]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Now the process can be summarized as:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"+----------------------+ \n|    \u2776 createQuery    |\n+-----------+----------+\n            |\n     Mutable Query\n(Operations like where, orderBy\ndirectly modify the query) \n            |\n            |\n           \\|/\n+----------------------+\n|     \u2777 select        |\n+-----------+----------+\n            |\n    Immutable Query \n(Operations like limit, distinct\ncreate new queries without modifying current one)\n            |\n            |\n           \\|/\n+----------------------+\n| \u2778 exceute or others |\n+-----------+----------+\n            |\n           \\|/\n     Execution Result\n(Result type is specified by \u2777 select)\n"})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},19365:(e,n,t)=>{t.d(n,{A:()=>a});t(96540);var r=t(18215);const i={tabItem:"tabItem_Ymn6"};var s=t(74848);function a(e){let{children:n,hidden:t,className:a}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,r.A)(i.tabItem,a),hidden:t,children:n})}},11470:(e,n,t)=>{t.d(n,{A:()=>q});var r=t(96540),i=t(18215),s=t(23104),a=t(56347),l=t(205),o=t(57485),c=t(31682),u=t(70679);function d(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=n??function(e){return d(e).map((e=>{let{props:{value:n,label:t,attributes:r,default:i}}=e;return{value:n,label:t,attributes:r,default:i}}))}(t);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:t}=e;const i=(0,a.W6)(),s=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,o.aZ)(s),(0,r.useCallback)((e=>{if(!s)return;const n=new URLSearchParams(i.location.search);n.set(s,e),i.replace({...i.location,search:n.toString()})}),[s,i])]}function x(e){const{defaultValue:n,queryString:t=!1,groupId:i}=e,s=h(e),[a,o]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const r=t.find((e=>e.default))??t[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:s}))),[c,d]=m({queryString:t,groupId:i}),[x,j]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[i,s]=(0,u.Dv)(t);return[i,(0,r.useCallback)((e=>{t&&s.set(e)}),[t,s])]}({groupId:i}),b=(()=>{const e=c??x;return p({value:e,tabValues:s})?e:null})();(0,l.A)((()=>{b&&o(b)}),[b]);return{selectedValue:a,selectValue:(0,r.useCallback)((e=>{if(!p({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);o(e),d(e),j(e)}),[d,j,s]),tabValues:s}}var j=t(92303);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var y=t(74848);function f(e){let{className:n,block:t,selectedValue:r,selectValue:a,tabValues:l}=e;const o=[],{blockElementScrollPositionUntilNextRender:c}=(0,s.a_)(),u=e=>{const n=e.currentTarget,t=o.indexOf(n),i=l[t].value;i!==r&&(c(n),a(i))},d=e=>{let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const t=o.indexOf(e.currentTarget)+1;n=o[t]??o[0];break}case"ArrowLeft":{const t=o.indexOf(e.currentTarget)-1;n=o[t]??o[o.length-1];break}}n?.focus()};return(0,y.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":t},n),children:l.map((e=>{let{value:n,label:t,attributes:s}=e;return(0,y.jsx)("li",{role:"tab",tabIndex:r===n?0:-1,"aria-selected":r===n,ref:e=>o.push(e),onKeyDown:d,onClick:u,...s,className:(0,i.A)("tabs__item",b.tabItem,s?.className,{"tabs__item--active":r===n}),children:t??n},n)}))})}function g(e){let{lazy:n,children:t,selectedValue:s}=e;const a=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=a.find((e=>e.props.value===s));return e?(0,r.cloneElement)(e,{className:(0,i.A)("margin-top--md",e.props.className)}):null}return(0,y.jsx)("div",{className:"margin-top--md",children:a.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==s})))})}function v(e){const n=x(e);return(0,y.jsxs)("div",{className:(0,i.A)("tabs-container",b.tabList),children:[(0,y.jsx)(f,{...n,...e}),(0,y.jsx)(g,{...n,...e})]})}function q(e){const n=(0,j.A)();return(0,y.jsx)(v,{...e,children:d(e.children)},String(n))}},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>l});var r=t(96540);const i={},s=r.createContext(i);function a(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);